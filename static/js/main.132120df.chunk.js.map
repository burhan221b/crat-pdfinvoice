{"version":3,"sources":["events/eventListeners.ts","utils/handlePDFDownload.tsx","utils/handlePDFNewTab.tsx","utils/utils.tsx","utils/useForm.tsx","components/Invoice.tsx","components/Version.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["deleteRowFadeOut","id","a","document","getElementById","classList","add","timeout","ms","Promise","resolve","setTimeout","pdfMake","vfs","pdfFonts","convertJSONValues","template","data","items","ROWS_STRING","HEIGHT","forEach","o","push","JSON","stringify","qty","item","unitprice","tax","amount","join","createPDFmakeTableRows","TABLE_ROWS","handleTotals","AMOUNT","TAX","TOTAL","replace","logo","date","to_name","to_phone","to_email","from_name","from_email","to_address","from_address","toString","form_notes","validateMath","values","name","parseFloat","updateAmount","toFixed","updateUnitPrice","UseForm","initialState","useState","state","setState","useEffect","console","log","handleChange","event","preventDefault","target","value","handleListChange","filter","row","map","handleDeleteRow","handleSubmit","btn","template2","docDefinition","parse","createPdf","open","handlePDFNewTab","download","handlePDFDownload","handleDirectStateUpdate","Invoice","props","children","customStyles","InvoiceId","className","style","TableTotalRow","TableRow","index","updateRow","handleDeleteBtn","onChange","e","type","min","onClick","TableRows","rows","setRows","temp","newRows","uuidv4","createTableTotal","FormTable","initial_date","dt","Date","getFullYear","getMonth","getDate","valueAsDate","Form","alt","src","htmlFor","from_phone","Object","keys","length","cols","displayName","Version","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.132120df.chunk.js","sourcesContent":["\nfunction updateDate(initial_date: Date) {\n    (<HTMLInputElement>document.getElementById('datePicker')).valueAsDate = initial_date || new Date();\n}\n\nasync function deleteRowFadeOut(id: string) {\n    document.getElementById(`${id}`)?.classList.add('fade-out');\n    await timeout(200);\n}\n\nfunction timeout(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport { updateDate, deleteRowFadeOut };","import pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\n// import htmlToPdfmake from \"html-to-pdfmake\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n// const handlePDFDownload = (pdf_string: string) => {\n//   console.log(\"Running handlePDFDownload\")\n//   var val = htmlToPdfmake(pdf_string);\n//   var dd = { content: val };\n//   pdfMake.createPdf(dd).download();\n// };\n\nconst handlePDFDownload = (docDefinition: any) => {\n  pdfMake.createPdf(docDefinition).download();\n};\n\nexport { handlePDFDownload }","import pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst handlePDFNewTab = (docDefinition: any) => {\n    pdfMake.createPdf(docDefinition).open();\n};\n\nexport { handlePDFNewTab }","function convertJSONValues(template: string, data: any) {\n    // const TABLE_ROWS = createTableRows(template, data.items);\n    const [TABLE_ROWS, HEIGHT] = createPDFmakeTableRows(template, data.items);\n    const [AMOUNT, TAX, TOTAL] = handleTotals(data.items);\n    template = template.replace('\\n', \"\");\n    template = template.replace('${LOGO}', (data.logo || \"\"));// Need to add logo to state\n    template = template.replace('${DATE}', (data.date || \"\"));\n    template = template.replace('${TO_NAME}', (data.to_name || \"\"));\n    template = template.replace('${TO_PHONE}', (data.to_phone || \"\"));\n    template = template.replace('${TO_EMAIL}', (data.to_email || \"\"));\n    template = template.replace('${FROM_NAME}', (data.from_name || \"\"));\n    template = template.replace('${FROM_PHONE}', (data.from_email || \"\"));\n    template = template.replace('${FROM_EMAIL}', (data.from_email || \"\"));\n    template = template.replace('${TO_ADDRESS}', (data.to_address || \"\"));\n    template = template.replace('${FROM_ADDRESS}', (data.from_address || \"\"));\n    template = template.replace('{\"CUSTOM_FIELD\":\"${TABLE_ROWS}\"},', TABLE_ROWS || \"\");\n    template = template.replace('${AMOUNT}', (AMOUNT).toString());\n    template = template.replace('${TOTAL_TAX}', (TAX).toString());\n    template = template.replace('${TOTAL}', (TOTAL).toString());\n    template = template.replace('${NOTES}', (data.form_notes || \"\"));\n    template = template.replace('${ADD_ROW_HEIGHTS}', (HEIGHT || \"\"));\n    return template;\n}\n\nfunction validateMath(values: any, name: string) {\n    values = { ...values, qty: values.qty && parseFloat(values.qty) > 0 ? parseFloat(values.qty) : 1, unitprice: parseFloat(values.unitprice) || 0, tax: parseFloat(values.tax) || 0, amount: parseFloat(values.amount) || 0 };\n    switch (name) {\n        case \"qty\": updateAmount(values);\n            break;\n        case \"unitprice\": updateAmount(values);\n            break;\n        case \"tax\": updateAmount(values);\n            break;\n        case \"amount\": updateUnitPrice(values);\n            break;\n    }\n    return values;\n}\n\nfunction updateAmount(values: any) {\n    // (qty * unitprice)  + ((qty * unitprice) * (tax/100))\n    values.amount = ((values.qty * values.unitprice) + ((values.qty * values.unitprice) * (values.tax / 100))).toFixed(2);\n}\n\nfunction updateUnitPrice(values: any) {\n    // (amount/qty) /(1+tax)\n    values.unitprice = ((values.amount / values.qty) / (1 + (values.tax / 100))).toFixed(2);\n}\n\n\nfunction handleTotals(items: any) {\n    let TOTAL = 0;\n    let AMOUNT = 0;\n    let TAX = 0;\n    items.forEach((o: any) => {\n        const values = { qty: parseFloat(o.qty) || 1, unitprice: parseFloat(o.unitprice) || 0, tax: parseFloat(o.tax) || 0, amount: parseFloat(o.amount) || 0 };\n        AMOUNT += parseFloat(((values.qty * values.unitprice)).toFixed(2));\n        TAX += parseFloat((((values.qty * values.unitprice) * (values.tax / 100))).toFixed(2));\n        TOTAL += parseFloat((values.amount).toFixed(2));\n    });\n    return [parseFloat(AMOUNT.toFixed(2)), parseFloat(TAX.toFixed(2)), parseFloat(TOTAL.toFixed(2))];\n}\n\n//! For HTML to PDFmake\nfunction createTableRows(template: string, items: any) {\n    const ROWS = [''];\n    let TOTAL_ROWS = '';\n    items.forEach((o: any) => {\n        ROWS.push(\"<tr>\");\n        const qty = `<td>${o.qty || \"1\"}</td>`;\n        const item = `<td>${o.item || \"\"}</td>`;\n        const unitprice = `<td>${o.unitprice || \"0\"}</td>`;\n        const tax = `<td>${o.tax || \"0\"}</td>`;\n        const amount = `<td>${o.amount || \"0\"}</td>`;\n        ROWS.push(qty, item, unitprice, tax, amount);\n        ROWS.push(\"</tr>\");\n    })\n    TOTAL_ROWS = ROWS.join('');\n    return TOTAL_ROWS;\n}\n\n//! For regular PDFmake\nfunction createPDFmakeTableRows(template: string, items: any) {\n    let ROWS_STRING = '';\n    const HEIGHT: string[] = [];\n    items.forEach((o: any) => {\n        HEIGHT.push(\"auto\");\n        ROWS_STRING += JSON.stringify([\n            {\n                \"text\": `${o.qty || \"1\"}`,\n                \"nodeName\": \"TD\",\n                \"background\": \"white\",\n                \"style\": [\n                    \"html-td\",\n                    \"html-tr\",\n                    \"html-tbody\",\n                    \"html-table\"\n                ]\n            },\n            {\n                \"text\": `${o.item || \"\"}`,\n                \"nodeName\": \"TD\",\n                \"background\": \"white\",\n                \"style\": [\n                    \"html-td\",\n                    \"html-tr\",\n                    \"html-tbody\",\n                    \"html-table\"\n                ]\n            },\n            {\n                \"text\": `${o.unitprice || \"0\"}`,\n                \"nodeName\": \"TD\",\n                \"background\": \"white\",\n                \"style\": [\n                    \"html-td\",\n                    \"html-tr\",\n                    \"html-tbody\",\n                    \"html-table\"\n                ]\n            },\n            {\n                \"text\": `${o.tax || \"0\"}`,\n                \"nodeName\": \"TD\",\n                \"background\": \"white\",\n                \"style\": [\n                    \"html-td\",\n                    \"html-tr\",\n                    \"html-tbody\",\n                    \"html-table\"\n                ]\n            },\n            {\n                \"text\": `${o.amount || \"0\"}`,\n                \"nodeName\": \"TD\",\n                \"background\": \"white\",\n                \"style\": [\n                    \"html-td\",\n                    \"html-tr\",\n                    \"html-tbody\",\n                    \"html-table\"\n                ]\n            }\n        ]);\n        ROWS_STRING += \",\";\n    })\n\n    return [ROWS_STRING, HEIGHT.join('')];\n}\n\nexport { convertJSONValues, validateMath, handleTotals };\n","import { ChangeEvent, ChangeEventHandler, DetailedHTMLProps, TextareaHTMLAttributes, useEffect, useState } from \"react\";\nimport { deleteRowFadeOut } from \"../events/eventListeners\";\nimport basic_invoice_template from '../json/basic_invoice_template.json';\nimport template2 from \"../json/template2.json\"\nimport { handlePDFDownload } from \"./handlePDFDownload\";\nimport { handlePDFNewTab } from \"./handlePDFNewTab\";\nimport { convertJSONValues, validateMath } from \"./utils\";\n\n\n\n\n\n\nexport interface initialStateProps {\n    [key: string]: any\n}\n\nconst UseForm = (initialState: initialStateProps) => {\n    const [state, setState] = useState(initialState);\n    useEffect(() => {\n        console.log(\"state\", state);\n        return () => {\n\n        }\n    }, [state])\n\n    const handleSubmit = (event: any, state: any, btn: string) => {\n        event.preventDefault();\n        console.log(\"CLICKED SUBMIT\")\n        //! HTML-PDFmake\n        // const template = basic_invoice_template.template;\n        // const pdf_string_ready = convertJSONValues(template, state);\n        // handlePDFDownload(pdf_string_ready);\n        //! PDFmake\n        let template: any = template2.template;\n        template = convertJSONValues(JSON.stringify(template), state);\n        const docDefinition = JSON.parse(template) as any;\n        // pdfMake.createPdf(docDefinition).open();\n        if (btn === \"open\") handlePDFNewTab(docDefinition);\n        else handlePDFDownload(docDefinition);\n\n\n    }\n\n    // const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const handleChange = (event: any) => { // Was changed due to text area\n        event.preventDefault();\n        const { name, value } = event.target;\n        setState({ ...state, [name]: value });\n    }\n\n    const handleListChange = (event: ChangeEvent<HTMLInputElement>, id: string) => {\n        event.preventDefault();\n        const { name, value } = event.target as HTMLInputElement;\n        console.log(\"handleListChange\", \"id\", id, \"name\", name, \"value\", value)\n        let items = state.items || [{ id }];\n        let [row] = items.filter((o: any) => o.id === id);\n        if (!row) {\n            row = { id, [name]: value };\n            if (name !== \"item\") row = validateMath(row, name)\n            items.push(row);\n        } else {\n            row = { ...row, [name]: value }\n            if (name !== \"item\") row = validateMath(row, name)\n            items = items.map((o: any) => (o.id === id) ? { ...o, ...row } : o);\n        }\n        setState({ ...state, items });\n    }\n\n    const handleDeleteRow = (id: string) => {\n        let items = state.items;\n        items = items.filter((o: any) => o.id !== id);\n        setState({ ...state, items });\n    }\n\n    const handleDirectStateUpdate = (name: string, value: any, id: string) => {\n        if (id) { // Only add id if you want to update list\n            let items = state.items || [{ id }];\n            let [row] = items.filter((o: any) => o.id === id);\n            if (!row) {\n                row = { id, [name]: value };\n                if (name !== \"item\") row = validateMath(row, name)\n                items.push(row);\n            } else {\n                row = { ...row, [name]: value }\n                if (name !== \"item\") row = validateMath(row, name)\n                items = items.map((o: any) => (o.id === id) ? { ...o, ...row } : o);\n            }\n            setState({ ...state, items });\n        }\n        else { // For top level state\n            setState({ ...state, [name]: value });\n        }\n    }\n\n    return { state, handleChange, handleListChange, handleDeleteRow, handleSubmit, handleDirectStateUpdate }\n}\n\nexport default UseForm;","import React, { CSSProperties, ReactElement, useRef, useEffect, FormEvent, ChangeEvent, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { deleteRowFadeOut, updateDate } from '../events/eventListeners';\n// import \"../styles/Invoice.css\";\nimport \"../styles/InvoiceV1.css\";\nimport UseForm from '../utils/useForm';\nimport { handleTotals } from '../utils/utils';\n\nexport interface InvoiceProps {\n    children: Element | ReactElement[] | Element[] | React.FormEvent<HTMLInputElement> | any,\n    InvoiceId: string,\n    customStyles?: CSSProperties | undefined\n}\n\nexport interface InvoiceFormProps {\n    customStyles?: CSSProperties | undefined\n}\n\nexport interface PassingStateProps {\n    state?: any,\n    handleListChange?: any,\n    handleDeleteRow?: any,\n    row?: any,\n    index?: number,\n    id?: string,\n    handleDeleteBtn?: any,\n    updateRow?: any,\n    handleDirectStateUpdate?: any\n}\n\nexport interface TableTotalProps {\n    TOTAL: number,\n    TAX: number,\n    AMOUNT: number,\n    index?: number,\n    id?: string,\n}\n\nexport interface Row {\n    qty: number,\n    item: string,\n    unit_price: number,\n    tax: number,\n    amount: number,\n    id: string\n}\n\n// Main Body of Invoice\nconst Invoice = (props: InvoiceProps) => {\n    const { children, customStyles, InvoiceId } = props\n    return (<>\n        <div className=\"invoice\" id={InvoiceId} style={customStyles}>{children}</div>\n    </>);\n}\n\n// Invoice Check/Type (Single vs Company)\n\n// Invoice Form \n/*\n- Date\n- Customer info\n- Customer address\n- Add button to add row\n- Remove/Delete button to remove row\n- QTY\n- Items \n- Unit price\n- Tax\n- Price \n- Show Preview (Current Total)\n- Create PDF Invoice Button\n*/\n\n\nconst TableTotalRow = (props: TableTotalProps) => {\n    const { AMOUNT, TAX, TOTAL } = props;\n    return (<><tr className=\"last-tr form-table-tr\">\n        <td className=\"qty-td\"></td>\n        <td className=\"item-td\"></td>\n        <td className=\"unitprice-td\"></td>\n        <td className=\"tax-td\"><strong>AMOUNT</strong></td>\n        <td className=\"amount-td\">{AMOUNT}</td>\n        <td className=\"delete-td\"></td>\n    </tr>\n        <tr className=\"last-tr form-table-tr\">\n            <td className=\"qty-td\"></td>\n            <td className=\"item-td\"></td>\n            <td className=\"unitprice-td\"></td>\n            <td className=\"tax-td\"><strong>TAX</strong></td>\n            <td className=\"amount-td\">{TAX}</td>\n            <td className=\"delete-td\"></td>\n        </tr>\n        <tr className=\"last-tr form-table-tr\">\n            <td className=\"qty-td\"></td>\n            <td className=\"item-td\"></td>\n            <td className=\"unitprice-td\"></td>\n            <td className=\"tax-td TOTAL\"><strong>TOTAL</strong></td>\n            <td className=\"amount-td TOTAL\" id=\"TOTAL\">{TOTAL}</td>\n            <td className=\"delete-td\"></td>\n        </tr>\n    </>)\n}\n\nconst TableRow = (props: PassingStateProps) => {\n    const { row, index, updateRow, handleDeleteBtn, id } = props;\n    return (<tr key={index} id={id} className=\"fade-in form-table-tr\">\n        <td className=\"qty-td\"><input onChange={(e) => updateRow(e, id)} name=\"qty\" value={row.qty} type=\"number\" className=\"input-qty\" min=\"1\" /></td>\n        <td className=\"item-td\"><input onChange={(e) => updateRow(e, id)} name=\"item\" value={row.item} type=\"text\" className=\"input-item\" /></td>\n        <td className=\"unitprice-td\"><input onChange={(e) => updateRow(e, id)} name=\"unitprice\" value={row.unitprice} type=\"number\" className=\"input-unitprice\" /></td>\n        <td className=\"tax-td\"><input onChange={(e) => updateRow(e, id)} name=\"tax\" value={row.tax} type=\"number\" className=\"input-tax\" /></td>\n        <td className=\"amount-td\"><input onChange={(e) => updateRow(e, id)} name=\"amount\" value={row.amount} type=\"number\" className=\"input-amount\" /></td>\n        <td className=\"delete-td\"><button onClick={() => handleDeleteBtn(id)} name=\"delete\" type=\"button\" className=\"btn\" id=\"btn-deleterow\">&#10005;</button></td>\n    </tr>)\n}\n\n\nconst TableRows = (props: PassingStateProps) => {\n    const { state, handleListChange, handleDeleteRow } = props;\n    let [rows, setRows] = useState<any[]>([]);\n    const updateRow = (e: ChangeEvent<HTMLInputElement>, id: string) => {\n        e.preventDefault()\n        let [temp] = rows.filter((o: any) => o.id === id);\n        const { name, value } = e.target;\n        temp = { ...temp, [name]: value }\n        const newRows = rows.map((o: any) => (o.id === id) ? temp : o);\n        setRows(newRows);\n        handleListChange(e, id)\n    }\n\n    const handleDeleteBtn = async (id: string) => {\n        let temp = rows.filter((o: any) => o.id !== id);\n        await deleteRowFadeOut(id);\n        handleDeleteRow(id);\n        setRows(temp);\n    }\n\n    useEffect(() => {\n        const items = state.items || [];\n        console.log(\"useEffect items\", items)\n        setRows([...items])\n        return () => {\n\n        }\n    }, [state.items])\n\n    const createTableRows = () => {\n        return rows.map((row: Row, index: number) => (\n            <TableRow updateRow={updateRow} handleDeleteBtn={handleDeleteBtn} key={row.id} id={row.id} index={index} row={row} />\n        ))\n    }\n\n    const createTableTotal = () => {\n        const items = state.items;\n        const [AMOUNT, TAX, TOTAL] = handleTotals(items);\n        return (\n            <TableTotalRow AMOUNT={AMOUNT} TAX={TAX} TOTAL={TOTAL} />\n        )\n    }\n\n    return (<>\n        {createTableRows()}\n        <button type=\"button\" onClick={() => setRows([...rows, { id: uuidv4(), qty: 1, item: \"\", unitprice: 0, tax: 0, amount: 0 }])} className=\"btn add-row\" id=\"btn-addrow\">Add &#10010;</button>\n        {createTableTotal()}\n\n    </>)\n}\n\n\nconst FormTable = (props: PassingStateProps) => {\n    const { state, handleListChange, handleDeleteRow, handleDirectStateUpdate } = props;\n    useEffect(() => {\n        const dt = new Date();\n        handleDirectStateUpdate(\"date\", dt.getFullYear() + \"-\" + (dt.getMonth() + 1) + \"-\" + dt.getDate());\n        updateDate(dt);\n\n        return () => {\n\n        }\n    }, [])\n    return (\n        <div className=\"container-box form-table-div\">\n            <table className=\"form-table\">\n                <thead>\n                    <tr className=\"form-table-tr form-table-tr-headers\">\n                        <th className=\"qty-th\">QTY</th>\n                        <th className=\"item-th\">ITEM</th>\n                        <th className=\"unitprice-th\">UNIT PRICE</th>\n                        <th className=\"tax-th\">TAX%</th>\n                        <th className=\"amount-th\">AMOUNT</th>\n                        <th className=\"delete-th\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <TableRows state={state} handleListChange={handleListChange} handleDeleteRow={handleDeleteRow} />\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nInvoice.Form = (props: InvoiceFormProps) => {\n    const { customStyles } = props\n    const { state, handleChange, handleListChange, handleDeleteRow, handleSubmit, handleDirectStateUpdate } = UseForm({ items: [] });\n    return (\n        // <form onSubmit={(e) => handleSubmit(e, state)} className=\"invoice-form\" style={customStyles}>\n        <form className=\"invoice-form\" style={customStyles}>\n            <div className=\"container-box invoice-form-header\">\n                {/* Logo */}\n                <img alt=\"\" className=\"invoice-logo\" src=\"https://source.unsplash.com/random/200x150\" />\n                <div className=\"invoice-formality\">\n                    <h1 className=\"invoice-label\">INVOICE</h1>\n                    {/* Date */}\n                    <input onChange={handleChange} name=\"date\" id=\"datePicker\" type=\"date\" className=\"invoice-date\" />\n                </div>\n            </div>\n            <div className=\"form-info-container\">\n                <div className=\"container-box form-to-container\">\n                    {/* To Info */}\n                    <h4 className=\"form-h-title\">To:</h4>\n                    <div className=\"form-to-info-container\">\n                        <label htmlFor=\"\" className=\"form-to-label\">Name</label>\n                        <input onChange={handleChange} name=\"to_name\" value={state.to_name} type=\"text\" className=\"form-to-name\" />\n                        <label htmlFor=\"\" className=\"form-to-label\">Phone</label>\n                        <input onChange={handleChange} name=\"to_phone\" value={state.to_phone} type=\"text\" className=\"form-to-phone\" />\n                        <label htmlFor=\"\" className=\"form-to-label\">Email</label>\n                        <input onChange={handleChange} name=\"to_email\" value={state.to_email} type=\"text\" className=\"form-to-email\" />\n                        <label htmlFor=\"\" className=\"form-to-label\">Address</label>\n                        <input onChange={handleChange} name=\"to_address\" value={state.to_address} type=\"text\" className=\"form-to-address\" />\n                    </div>\n                </div>\n                <div className=\"container-box form-from-container\">\n                    <h4 className=\"form-h-title\">From:</h4>\n                    {/* From Info */}\n                    <div className=\"form-from-info-container\">\n                        <label htmlFor=\"\" className=\"form-from-label\">Name</label>\n                        <input onChange={handleChange} name=\"from_name\" value={state.from_name} type=\"text\" className=\"form-from-name\" />\n                        <label htmlFor=\"\" className=\"form-from-label\">Phone</label>\n                        <input onChange={handleChange} name=\"from_phone\" value={state.from_phone} type=\"text\" className=\"form-from-phone\" />\n                        <label htmlFor=\"\" className=\"form-from-label\">Email</label>\n                        <input onChange={handleChange} name=\"from_email\" value={state.from_email} type=\"text\" className=\"form-from-email\" />\n                        <label htmlFor=\"\" className=\"form-from-label\">Address</label>\n                        <input onChange={handleChange} name=\"from_address\" value={state.from_address} type=\"text\" className=\"form-from-address\" />\n                    </div>\n                </div>\n            </div>\n            {/* Table  */}\n            {Object.keys(state).length > 0 && <FormTable state={state} handleListChange={handleListChange} handleDeleteRow={handleDeleteRow} handleDirectStateUpdate={handleDirectStateUpdate} />}\n            {/* Notes */}\n            <div className=\"container-box form-notes\">\n                <h4 className=\"form-h-title form-notes-title\">NOTES:</h4>\n                <textarea onChange={handleChange} name=\"form_notes\" id=\"\" cols={30} rows={10} className=\"form-notes-textarea\" />\n            </div>\n            <div className=\"form-submit\">\n                <button type=\"button\" onClick={(e) => handleSubmit(e, state, \"open\")} className=\"btn form-submit-btn\" id=\"btn-opentab\">Open New Tab</button>\n                <button type=\"button\" onClick={(e) => handleSubmit(e, state, \"download\")} className=\"btn form-submit-btn\" id=\"btn-download\">Download</button>\n            </div>\n        </form>\n    )\n}\n\nInvoice.displayName = \"Invoice\";\nexport default Invoice;","import React from 'react';\nimport \"../styles/Version.css\";\n\nexport interface VersionProps {\n\n}\n\nconst Version: React.FunctionComponent<VersionProps> = () => {\n    return (\n        <div className=\"version\">Version 1.3.0</div>\n    );\n}\n\nexport default Version;","import React from 'react';\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\nimport htmlToPdfmake from \"html-to-pdfmake\";\nimport Invoice from './components/Invoice';\nimport Version from './components/Version';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={handlePDFDownload}></button> */}\n      <Invoice InvoiceId=\"1\">\n        <Invoice.Form />\n      </Invoice>\n      <Version />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}